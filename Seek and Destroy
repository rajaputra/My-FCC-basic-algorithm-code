function destroyer(arr) {
//1.
  var args = Array.prototype.slice.call(arguments);

  var filtering = args.splice(0, 1);
   return arr.filter(function (element) {
    return args.indexOf(element) === -1;
   });
/*2.
// Remove all the values
  var args = Array.prototype.slice.call(arguments, 1); //just add ,1 to slice
  return arr.filter(function (element) {
    return args.indexOf(element) === -1;
   });
*/
/*3.
  var args = Array.prototype.slice.call(arguments);
  
  args.splice(0, 1);
    
  
    for (var i=0; i<arr.length; i++) {
      for (var j=0; j< args.length; j++) {
        if (arr[i] == args[j]);
        delete arr[i];
      }
    }
  var placeHolder = arr.filter(removeFalseVar);
  return placeHolder;
  }
  function removeFalseVar(val) {
   return Boolean(val);
*/
/*4.
// Remove all the values
  var args = Array.prototype.slice.call(arguments);
  args.splice(0, 1);
  var hola = [];
  for(var i = 0; i < arr.length; i++){
    if(args.indexOf(arr[i])===-1){
      hola.push(arr[i]);
    }
  }
  return hola;
*/
/*5.
// Method 1

  var args = Array.from(arguments);
  args.splice(0,1);
  return arr.filter(function(val){
    return args.indexOf(val) == -1;
  }); 
  */
  /*6.
   // Method 2

 arr1 = Array.from(arguments);
 for (a=1;a<arr1.length;a++){
    arr = arr.filter(function(number){
      return number != arr1[a] ;
    });
 }return arr;
  */
}

destroyer([1, 2, 3, 1, 2, 3], 2, 3);
